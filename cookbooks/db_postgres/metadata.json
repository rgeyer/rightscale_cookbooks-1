{
  "dependencies": {
    "sys_dns": ">= 0.0.0",
    "rightscale": ">= 0.0.0",
    "db": ">= 0.0.0",
    "block_device": ">= 0.0.0"
  },
  "name": "db_postgres",
  "maintainer_email": "support@rightscale.com",
  "attributes": {
    "db_postgres": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ],
      "display_name": "General Database Options"
    },
    "db_postgres/database_name": {
      "required": "required",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [
        "db_postgres::setup_server_9_1"
      ],
      "display_name": "Database Name",
      "description": "Enter the name of the PostgreSQL database for setting up postgresql database monitoring. Ex: mydbname"
    },
    "db_postgres/server_usage": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "shared",
        "dedicated"
      ],
      "default": "dedicated",
      "type": "string",
      "recipes": [
        "db_postgres::setup_server_9_1"
      ],
      "display_name": "Server Usage",
      "description": "Use 'dedicated' if the postgresql config file allocates all existing resources of the machine.  Use 'shared' if the PostgreSQL config file is configured to use less resources so that it can be run concurrently with other apps like Apache and Rails for example."
    }
  },
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "suggestions": {
  },
  "platforms": {
  },
  "maintainer": "RightScale, Inc.",
  "long_description": "= RightScale Database Manager for PostgreSQL (Beta)\n\n== DESCRIPTION:\n\nProvides the PostgreSQL implementation of the 'db' resource to install and\nmanage PostgreSQL database stand-alone servers and clients.\n\n\n== DETAILS\n\nThe 'db' implementation is defined by a Lightweight Provider, which can be\nfound in the providers/default.rb file.\n\n\n== REQUIREMENTS:\n\n* Requires a VM launched from a RightScale managed RightImage\n\n* Needs RightScale ServerTemplate tools gem installed on system.\n\n== COOKBOOKS DEPENDENCIES:\n\nPlease see <tt>metadata.rb</tt> file for the latest dependencies.\n\n== KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n\n== SETUP:\n\n* Place the <tt>db_postgres::setup_server_<version></tt> recipe into your runlist to\n  load the PostgreSQL provider, tuning parameters, as well as other PostgreSQL-specific\n  attributes into the node as inputs.\n\n* Place the <tt>db::install_server</tt> recipe after setup_server_<version> recipe in\n  provider cookbooks to setup generic server and client inputs. This will also include\n  <tt>db::default</tt> recipe to apply all client inputs and install client. For example:\n\n    db_postgres::setup_server_9_1\n    db::install_server\n\n  This will set up and install PostgreSQL 9.1 client and server.\n\n* Place the <tt>db::default</tt> recipe into your runlist to pull in generic client inputs,\n  provide provider selection input and install client. Set db/provider_type input in\n  RightScale ServerTemplate to set provider and version for 'db' resource.\n\n== USAGE:\n\n=== Basic usage\n\nOnce setup, use the recipes in the 'db' cookbook to install and manage your\nPostgreSQL database servers and clients.  See the <tt>db/README.rdoc</tt> for usage\ndetails.\n\n=== PostgreSQL Tuning and postgresql.conf and pg_hba.conf\n\nCustom tuning parameters can be applied by overriding the <tt>postgres_tuning.rb</tt>\nattributes file. For more information and an example override repository,\nplease see: {Override Chef Cookbooks}[http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Override_Chef_Cookbooks].\n\n== DETAILS:\n\nThe 'db' implementation is defined by a Lightweight Provider, which can be\nfound in the <tt>providers/default.rb</tt> file.\n\n== LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.  All access and use subject to\nthe RightScale Terms of Service available at http://www.rightscale.com/terms.php\nand, if applicable, other agreements such as a RightScale Master Subscription\nAgreement.\n",
  "version": "13.2.0",
  "recommendations": {
  },
  "recipes": {
    "db_postgres::setup_server_9_1": "Set the DB PostgresSQL provider. Sets version 9.1 and node variables specific to PostgresSQL 9.1.",
    "db_postgres::do_show_slave_sync_mode": "Show the sync mode for the replication.",
    "db_postgres::do_set_slave_async_mode": "Set master to do a sync based on replication with a slave. For more info refer http://www.postgresql.org/docs/9.1/static/warm-standby.html#SYNCHRONOUS-REPLICATION",
    "db_postgres::do_set_slave_sync_mode": "Set master to do sync based replication with slave. PostgreSQL streaming replication is asynchronous by default. If the primary server crashes then some transactions that were committed may not have been replicated to the standby server, causing data loss. The amount of data loss is proportional to the replication delay at the time of failover.\nSynchronous replication offers the ability to confirm that all changes made by a transaction have been transferred to one synchronous standby server. This extends the standard level of durability offered by a transaction commit. This level of protection is referred to as 2-safe replication in computer science theory.\nRef: http://www.postgresql.org/docs/9.1/static/warm-standby.html#SYNCHRONOUS-REPLICATION"
  },
  "groupings": {
  },
  "conflicting": {
  },
  "replacing": {
  },
  "description": "Installs/configures a PostgreSQL database server with automated backups.",
  "providing": {
  }
}